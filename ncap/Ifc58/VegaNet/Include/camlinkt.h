/******************************************************************************
 *
 * MODULE   
 *		CamLinkt.h
 *
 * REVISION INFORMATION  
 *		$Logfile: /ifc/VegaNet/include/camlinkt.h $
 *		$Revision: 1.1 $
 *		$Modtime: 6/06/01 1:06p $
 *
 * ABSTRACT  
 *		Video source types of the CamLink board.
 *
 * TECHNICAL NOTES 
 *
 *
 * Copyright (c) 2000-2001 Imaging Technology, Inc.  All rights reserved.
 *
 ******************************************************************************/

#if !defined(AFX_CAMLINKT_H__E99D9D73_9E36_11D1_AE74_00A0C959E757__INCLUDED_)
#define AFX_CAMLINKT_H__E99D9D73_9E36_11D1_AE74_00A0C959E757__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000



#define VLNK_MIN_NUM_LUT_ENTRIES		0x10000
#define VLNK_MIN_SCATTER_LIST_SLOTS	0x8000
#define VLNK_MIN_NUM_OCT_ENTRIES		0x10000



typedef enum VLNK_TRIG_SRC_TYPE {
	VLNK_DIFFERENTIAL_TRIG,
	VLNK_TTL_TRIG,
	VLNK_OPTO_COUPLED_TRIG
} VLNK_TRIG_SRC_TYPE; 

typedef enum VLNK_TRIG_MODE_TYPE {
	VLNK_TMODE_DISABLE=0,
	VLNK_TMODE_HWTRIG0_ASSERT=2,
	VLNK_TMODE_HWTRIG0_DEASSERT=3,
	VLNK_TMODE_HWTRIG1_ASSERT=4,
	VLNK_TMODE_HWTRIG1_DEASSERT=5,
	VLNK_TMODE_SWTRIG0=6,
	VLNK_TMODE_SWTRIG1=7,

} VLNK_TRIG_MODE_TYPE;

typedef enum VLNK_DVAL_INPUT_TYPE {
	VLNK_DVAL_INPUT_FIELD,
	VLNK_DVAL_INPUT_VALID_DATA
} VLNK_DVAL_INPUT_TYPE;

typedef enum VLNK_EXSYNC_MODE_TYPE {
	VLNK_EXSYNC_FREE_RUNNING,
	VLNK_EXSYNC_TRIG1, 
	VLNK_EXSYNC_TRIG2,
	VLNK_EXSYNC_SOFT_TRIG, 
	VLNK_EXSYNC_SOFT_TRIG2, 
	VLNK_EXSYNC_VB_TRIG
} VLNK_EXSYNC_MODE_TYPE;


typedef enum VLNK_IMAGE_GEOMETRY_TYPE {
	VLNK_1CHAN_L2R,				// |A,A,A,..........A,A|
	VLNK_2CHAN_INTERLEAVED,		// |A,B,A,B,A,B,...,A,B|
	VLNK_2CHAN_SEP_TAP_L2R,		// 2 CHANNELS SEPERATE TAPS LEFT TO RIGHT	|A=>            |B=>            |
	VLNK_2CHAN_SEP_TAP_R2L,		// 2 CHANNELS SEPERATE TAPS RIGHT TO LEFT	|            <=A|            <=B|
	VLNK_2CHAN_SEP_TAP_CONVERGE=8,	// |A =>   |    <= B|
	VLNK_2TAP_INTERLINE_A_EVEN=10,			// Tap A even lines Tap B odd lines
	VLNK_2TAP_INTERLINE_B_EVEN,			// Tap B even lines Tap A odd lines
	VLNK_3CHAN_SEP_TAP_L2R,		// 3 CHANNELS SEPERATE TAPS LEFT TO RIGHT	|A=>    |B=>    |C=>    |
	VLNK_USER_DEFINED_GEO,		// a user-defined geometry

	VLNK_NUM_GEOMETRY_KINDS,

	VLNK_INVALID_GEOMETRY=-1

} VLNK_IMAGE_GEOMETRY_TYPE;

typedef enum VLNK_DIVIDE_CTL_TYPE {
	VLNK_DISABLE_TRIG_DIVIDE=0,
	VLNK_DIVIDE_TRIG_0=2,
	VLNK_DIVIDE_TRIG_1=3
} VLNK_DIVIDE_CTL_TYPE;


typedef enum VLNK_PRI_END_LOC_TYPE {
	VLNK_PRI_END_AT_LEN_BEGIN,
	VLNK_PRI_END_AT_LEN_END,
	VLNK_PRI_END_IS_START_DEPEND  // No extension of PRI beyond the active setting
} VLNK_PRI_END_LOC_TYPE;

typedef enum VLNK_LUT_BYTE_INPUT {
	VLNK_CAM_BYTE_0,
	VLNK_CAM_BYTE_1,
	VLNK_CAM_BYTE_2,
	VLNK_CAM_BYTE_ZERO
} VLNK_LUT_BYTE_INPUT;


typedef enum VLNK_CAM_CTL_SELECT_TYPE {
	VLNK_CCTL_FIXED_LOW,
	VLNK_CCTL_FIXED_HIGH,
	VLNK_CCTL_EXSYNC,
	VLNK_CCTL_PRI

} VLNK_CAM_CTL_SELECT_TYPE;



typedef enum VLNK_CHAN_ENUM {
	VLNK_CHAN_A=1,
	VLNK_CHAN_B=2,
	VLNK_CHAN_C=4,
	VLNK_CHAN_D=8

} VLNK_CHAN_ENUM;








typedef enum VLNK_PARAMS_TYPE {
	VLNK_DVAL_ENABLE = VSP_MOD_UNIQUE_BASE,		// VS_ENABLE_TYPE
	VLNK_DVAL_POLARITY,			// VS_EDGE_TYPE
	VLNK_DVAL_INPUT_MODE,	// VLNK_DVAL_INPUT_TYPE

	VLNK_SPR_ENABLE,			// VS_ENABLE_TYPE
	VLNK_SPR_POLARITY,			// VS_POLARITY_TYPE

	VLNK_EXSYNC_ENABLE,		// VS_ENABLE_TYPE

	VLNK_EXSYNC_POLARITY,		// VS_POLARITY_TYPE

	VLNK_EXSYNC_MODE,			// VS_EXSYNC_MODE

	VLNK_PRI_ENABLE,			// VS_ENABLE_TYPE
	VLNK_PRI_POLARITY,			// VS_POLARITY_TYPE
	
	VLNK_EXT_SYNC_PERIOD_TIME,	// units are microseconds range 140ns - 18.75s
	VLNK_EXT_SYNC_OFFSET_TIME, // units are microseconds range 0 - 18.75s , 0.07us granularity
	VLNK_EXT_SYNC_ACTIVE_TIME, // units are microseconds range 0.07us - 18.75s , 0.07us granularity
	VLNK_IMAGE_GEOMETRY,		// VLNK_IMAGE_GEOMETRY_TYPE
	VLNK_NUM_CAMERAS,		// range 1..3
	VLNK_TRIG_GLITCH_DETECTOR, // VS_ENABLE_TYPE
	VLNK_EXO_FILENAME,		// String holding the filename
	VLNK_TRIG_DIVIDE_FACTOR,	// Factor to scale trigger by
	VLNK_TRIG_DIVIDE_CONTROL, // Which trigger if any divider is applied to
	VLNK_USER_DEF_GEO_NAME,	// Name of user-defined geometry DLL
	VLNK_PRI_OFFSET_TIME,	// units are microseconds range 0 - 18.75s , 0.07us granularity
	VLNK_PRI_ACTIVE_TIME,   // units are microseconds range 0.07us - 18.75s , 0.07us granularity
	VLNK_PRI_END_LOCATION,	// VLNK_PRI_END_LOC_TYPE
	VLNK_LUT0_LOW_INPUT,		// 0-3 VLNK_LUT_BYTE_INPUT
	VLNK_LUT0_HIGH_INPUT,	// 0-3 VLNK_LUT_BYTE_INPUT
	VLNK_LUT1_LOW_INPUT,		// 0-3 VLNK_LUT_BYTE_INPUT
	VLNK_LUT1_HIGH_INPUT,	// 0-3 VLNK_LUT_BYTE_INPUT
	VLNK_CAM_CTL1_SIGNAL,	// which timing output signal is applied to Camera Control 1
	VLNK_CAM_CTL2_SIGNAL,	// which timing output signal is applied to Camera Control 2
	VLNK_CAM_CTL3_SIGNAL,	// which timing output signal is applied to Camera Control 3
	VLNK_CAM_CTL4_SIGNAL,	// which timing output signal is applied to Camera Control 4
	VLNK_SPATIAL_CORR_LINES,  // Number of lines between color sensor elements
	VLNK_SPATIAL_LEAD_COLOR, // Leading color when spatial correction used
	VLNK_TRIG_START_EVENT,	// VLNK_TRIG_MODE_TYPE
	VLNK_TRIG_STOP_EVENT,	// VLNK_TRIG_MODE_TYPE


	VLNK_PARAM_END_MARKER
} VLNK_PARAMS_TYPE;

#define VLNK_FFC_SETTING_DLG_ID VLNK_PECULIAR_PARAM_BASE+0x200


typedef enum VLNK_PGRPS_TYPE {
	VLNK_PGRP_EXSYNC_OUTPUT=VS_PGRP_MOD_PECULIAR_BASE,
	VLNK_PGRP_PRI_OUTPUT,
	VLNK_PGRP_LUT_INPUT,
	VLNK_PGRP_CAM_CTL_ASSIGNMENT

} VLNK_PGRPS_TYPE;

#define VLNK_PGRP_EXSYNC_OUTPUT_MASK			PGRP_ID_TO_MASK(VLNK_PGRP_EXSYNC_OUTPUT)
#define VLNK_PGRP_PRI_OUTPUT_MASK			PGRP_ID_TO_MASK(VLNK_PGRP_PRI_OUTPUT)
#define VLNK_PGRP_LUT_INPUT_MASK				PGRP_ID_TO_MASK(VLNK_PGRP_LUT_INPUT)
#define VLNK_PGRP_CAM_CTL_ASSIGNMENT_MASK	PGRP_ID_TO_MASK(VLNK_PGRP_CAM_CTL_ASSIGNMENT)


#define VLNK_NUM_PARAMS (GEN_PARAM_END_MARKER+VLNK_PARAM_END_MARKER-VLNK_PECULIAR_PARAM_BASE)


typedef enum VLNK_PORTIO_CHANNELS {
	VLNK_PARALLEL_IO_CHAN,
	VLNK_TTL0_IO_CHAN,
	VLNK_TTL1_IO_CHAN,
	VLNK_TTL2_IO_CHAN,
	VLNK_DIFF0_IO_CHAN,
	VLNK_DIFF1_IO_CHAN,
	VLNK_OPTO0_IO_CHAN,
	VLNK_OPTO1_IO_CHAN

} VLNK_PORTIO_CHANNELS;



#endif // !defined(AFX_CAMLINKT_H__E99D9D73_9E36_11D1_AE74_00A0C959E757__INCLUDED_)
