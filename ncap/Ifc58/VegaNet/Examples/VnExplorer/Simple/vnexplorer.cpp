// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "vnexplorer.h"

/////////////////////////////////////////////////////////////////////////////
// CVnExplorer

IMPLEMENT_DYNCREATE(CVnExplorer, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CVnExplorer properties

BOOL CVnExplorer::GetBorderProp()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetBorderProp(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetHasLinesProp()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetHasLinesProp(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetHasButtonsProp()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetHasButtonsProp(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetRootLinesProp()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetRootLinesProp(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetEditLabelProp()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetEditLabelProp(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetDisDragDropProp()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetDisDragDropProp(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetShowSelAlways()
{
	BOOL result;
	GetProperty(0x7, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetShowSelAlways(BOOL propVal)
{
	SetProperty(0x7, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetCheckBoxes()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetCheckBoxes(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetFullRowSel()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetFullRowSel(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetInfoTip()
{
	BOOL result;
	GetProperty(0xa, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetInfoTip(BOOL propVal)
{
	SetProperty(0xa, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetScroll()
{
	BOOL result;
	GetProperty(0xb, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetScroll(BOOL propVal)
{
	SetProperty(0xb, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetToolTips()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetToolTips(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetSingleExpand()
{
	BOOL result;
	GetProperty(0xd, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetSingleExpand(BOOL propVal)
{
	SetProperty(0xd, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetNonEvenHeight()
{
	BOOL result;
	GetProperty(0xe, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetNonEvenHeight(BOOL propVal)
{
	SetProperty(0xe, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetTrackSelect()
{
	BOOL result;
	GetProperty(0xf, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetTrackSelect(BOOL propVal)
{
	SetProperty(0xf, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetClientEdge()
{
	BOOL result;
	GetProperty(0x10, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetClientEdge(BOOL propVal)
{
	SetProperty(0x10, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetStaticEdge()
{
	BOOL result;
	GetProperty(0x11, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetStaticEdge(BOOL propVal)
{
	SetProperty(0x11, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetModalFrame()
{
	BOOL result;
	GetProperty(0x12, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetModalFrame(BOOL propVal)
{
	SetProperty(0x12, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetTransparent()
{
	BOOL result;
	GetProperty(0x13, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetTransparent(BOOL propVal)
{
	SetProperty(0x13, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetAcceptFiles()
{
	BOOL result;
	GetProperty(0x14, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetAcceptFiles(BOOL propVal)
{
	SetProperty(0x14, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetRightAlignedText()
{
	BOOL result;
	GetProperty(0x15, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetRightAlignedText(BOOL propVal)
{
	SetProperty(0x15, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetRightToLeft()
{
	BOOL result;
	GetProperty(0x16, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetRightToLeft(BOOL propVal)
{
	SetProperty(0x16, VT_BOOL, propVal);
}

BOOL CVnExplorer::GetLeftScrollBar()
{
	BOOL result;
	GetProperty(0x17, VT_BOOL, (void*)&result);
	return result;
}

void CVnExplorer::SetLeftScrollBar(BOOL propVal)
{
	SetProperty(0x17, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CVnExplorer operations

long CVnExplorer::GetCount()
{
	long result;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::GetIndent()
{
	long result;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CVnExplorer::SetIndent(long nIndent)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nIndent);
}

long CVnExplorer::GetNextItem(long hTreeItem, long nCode)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hTreeItem, nCode);
	return result;
}

BOOL CVnExplorer::ItemHasChildren(long hItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::GetChildItem(long hItem)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::GetNextSiblingItem(long hItem)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::GetPrevSiblingItem(long hItem)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::GetParentItem(long hItem)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x20, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::GetFirstVisibleItem()
{
	long result;
	InvokeHelper(0x21, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::GetNextVisibleItem(long hItem)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x22, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::GetPrevVisibleItem(long hItem)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x23, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::GetSelectedItem()
{
	long result;
	InvokeHelper(0x24, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::GetDropHilightItem()
{
	long result;
	InvokeHelper(0x25, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::GetRootItem()
{
	long result;
	InvokeHelper(0x26, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::GetItemState(long hItem, long nStateMask)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		hItem, nStateMask);
	return result;
}

BOOL CVnExplorer::SetItemState(long hItem, long nState, long nStateMask)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem, nState, nStateMask);
	return result;
}

long CVnExplorer::GetVisibleCount()
{
	long result;
	InvokeHelper(0x29, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::GetBkColor()
{
	long result;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::SetBkColor(long color)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		color);
	return result;
}

short CVnExplorer::GetItemHeight()
{
	short result;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CVnExplorer::SetItemHeight(short cyHeight)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		cyHeight);
	return result;
}

long CVnExplorer::GetTextColor()
{
	long result;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CVnExplorer::SetTextColor(long color)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		color);
	return result;
}

BOOL CVnExplorer::Expand(long hItem, long nCode)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x30, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem, nCode);
	return result;
}

BOOL CVnExplorer::Select(long hItem, long nCode)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem, nCode);
	return result;
}

BOOL CVnExplorer::SelectItem(long hItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x32, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem);
	return result;
}

long CVnExplorer::HitTest(short x, short y, long pFlags)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4;
	InvokeHelper(0x33, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		x, y, pFlags);
	return result;
}

BOOL CVnExplorer::SortChildren(long hItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x34, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem);
	return result;
}

BOOL CVnExplorer::EnsureVisible(long hItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x35, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem);
	return result;
}

BOOL CVnExplorer::SelectDropTarget(long hItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x36, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem);
	return result;
}

BOOL CVnExplorer::SelectSetFirstVisible(long hItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x37, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem);
	return result;
}

BOOL CVnExplorer::SetCheck(long hItem, short bCheck)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x38, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem, bCheck);
	return result;
}

BOOL CVnExplorer::GetCheck(long hItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x39, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		hItem);
	return result;
}

short CVnExplorer::Explore(long lpVSConfig)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3a, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lpVSConfig);
	return result;
}

void CVnExplorer::VideoSourceAttached(long hItem)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hItem);
}

void CVnExplorer::VideoSourceDetached(long hItem)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hItem);
}

CString CVnExplorer::GetItemText(long hItem)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		hItem);
	return result;
}

CString CVnExplorer::GetDomainName(long hItem)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3e, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		hItem);
	return result;
}

CString CVnExplorer::GetFullModuleName(long hItem)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		hItem);
	return result;
}

CString CVnExplorer::GetConfigFileName(long hItem)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x40, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		hItem);
	return result;
}

CString CVnExplorer::GetNodeName(long hItem)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		hItem);
	return result;
}

void CVnExplorer::BeginDrag(long lParam, short bTrackMove)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x42, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lParam, bTrackMove);
}

short CVnExplorer::EndDrag()
{
	short result;
	InvokeHelper(0x43, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}
