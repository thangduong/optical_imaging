/******************************************************************************
 *
 * MODULE
 *    pclreg.h 
 *
 * REVISION INFORMATION
 *    $Logfile: /ifc/include/pclreg.h $
 *    $Revision: 1.1 $
 *    $Modtime: 4/27/00 6:21p $
 *
 * ABSTRACT
 *    IFC PCLine Register names
 *
 * TECHNICAL NOTES
 *
 *
 * Copyright (c) 1999-2000 Imaging Technology, Inc.  All rights reserved.
 *
 ******************************************************************************/

#ifndef _PCL_REG
#define _PCL_REG


typedef enum {
	PCL_OCT_BYTE_SWAP,
	PCL_OCT_WORD_SWAP
} PCL_OCT_SWAP_TYPE;


enum {                    /* PCI configuration space registers */

    PCL_VENDOR_ID_32,
    PCL_DEVICE_ID_32,
    PCL_PCICMDSTAT_32,
    PCL_PCICMD_32,
    PCL_IOEN_32,
    PCL_MEMEN_32,
    PCL_PCIBMEN_32,
    PCL_PAREN_32,
    PCL_SEREN_32,
    PCL_FBB_32,
    PCL_PCISTAT_32,
    PCL_DTPAR_32,
    PCL_STABT_32,
    PCL_RTABT_32,
    PCL_RMABT_32,
    PCL_SSERR_32,
    PCL_DPARE_32,
    PCL_REVID_32,
    PCL_MEMSZ_32,
    PCL_CLASSCODE_32,
    PCL_CALN_32,
    PCL_LAT_32,
    PCL_HDR_32,
    PCL_BIST_32,
    PCL_BADR0_32,
    PCL_BADR1_32,
    PCL_BADR2_32,
    PCL_BADR3_32,
    PCL_BADR4_32,
    PCL_BADR5_32,
    PCL_XROM_32,
    PCL_INTLN_32,
    PCL_INTPIN_32,
    PCL_MINGNT_32,
    PCL_MAXLAT_32,
    PCL_MAX_CFGREG
};

enum {
    PCL_MBOX1_32 = PCL_MAX_CFGREG,   /* PCI Interface Control Register Set  */
    PCL_MB_FXSZ_32,
    PCL_MB_ILACE_32,
    PCL_MB_HSHK_32,
    PCL_MB_FYSZ_32,
    PCL_MB_PIX_32,
    PCL_MB0X2_32,
    PCL_MB_AOIXST_32,
    PCL_MB_AOIYST_32,
    PCL_MB0X3_32,
    PCL_MB_AOIXSZ_32,
    PCL_MB_AOIYSZ_32,
    PCL_MB_FYSZHI_32,
    PCL_MB_STFLD_32,
    PCL_MB_BMSEMA_32,
    PCL_MB0X4_32,
    PCL_MB_IMGADR_32,
    PCL_MB_BMINITFLG_32,
    PCL_MB_CONT_32,
    PCL_BMDST_32,
    PCL_BMXC_32,
    PCL_INTCTL_32,
    PCL_INTEN_32,
    PCL_BINTEN_32,
    PCL_INTST_32,
    PCL_BINTST_32,
    PCL_MAINT_32,
    PCL_TAINT_32,
    PCL_ENDIAN_32,
    PCL_BMCTL_32,
    PCL_FIFOFL_32,
    PCL_FIFO4P_32,
    PCL_FIFOEM_32,
    PCL_BMDONE_32,
    PCL_BMREQ_32,
    PCL_NVAD_32,
    PCL_RST_32,
    PCL_FIFOCLR_32,
    PCL_NVCTL_32,
    PCL_MAXREGS1
};

enum {

	// CTCON group
    PCL_CTCON_32 = PCL_MAXREGS1,
    PCL_LENSYNC_32,
    PCL_LENPOL_32,
    PCL_FENENB_32,
    PCL_FENPOL_32,
    PCL_MULTENB_32,
    PCL_MULTPOL_32,
    PCL_MMODE_32,
    PCL_PCLKPOL_32,
	PCL_DIAG_32,

	// OUTCON group
    PCL_OUTCON_32,
    PCL_DRIVEEXT_32,
    PCL_USEEXT_32,
    PCL_RETIME_32,
    PCL_RETPOL_32,
    PCL_CAM3_32,
    PCL_EXSEN_32,
    PCL_EXSPOL_32,
    PCL_EXTMD_32,
    PCL_PRIEN_32,
    PCL_PRIP_32,
	PCL_CMODECTL_32,
    PCL_SYNDATA_32,
    PCL_SYNCLKA_32,
    PCL_SYNCLKB_32,
    PCL_SYNMUXA_32,
    PCL_SYNMUXB_32,
	PCL_CCLKDIS_32,
	PCL_CCLKVAL_32,
	PCL_PRIHOLD_32,

    PCL_EXSFREQ_32,
    PCL_EXSOFF_32,
    PCL_EXSACT_32,
    PCL_PRIOFF_32,
    PCL_PRIACT_32,

	// ACQCON group
    PCL_ACQCON_32,
    PCL_STMODE_32,
    PCL_ETMODE_32,
    PCL_ACQMD_32,
    PCL_FLDSEL_32,
    PCL_FCNT_32,
    PCL_NEWACQ_32,
    PCL_GSTAT_32,
    PCL_FSTRT_32,
    PCL_HDEC_32,
    PCL_VDEC_32,

	PCL_FIFOINIT_32,

    PCL_HOFF_32,
    PCL_HACT_32,
    PCL_VOFF_32,
    PCL_VACT_32,
	PCL_LVACT_32,
	PCL_PVACT_32,

	// LUTCON0
    PCL_LUTCON0_32,
    PCL_LUT0PSIZE_32,
    PCL_LACCESS_32,
    PCL_L0BYTEL_32,
    PCL_L0BYTEH_32,
    PCL_LUT0PG_32,

	// LUTCON1
    PCL_LUTCON1_32,
    PCL_LUT1PSIZE_32,
    PCL_L1BYTEL_32,
    PCL_L1BYTEH_32,
    PCL_LUT1PG_32,

	// TRIGCON
    PCL_TRIGCON_32,
    PCL_TRIG0POL_32,
    PCL_TRIG0SRC_32,
	PCL_TRIG0GD_32,
    PCL_TRIG1POL_32,
    PCL_TRIG1SRC_32,
	PCL_TRIG1GD_32,

	// TRIGSTAT
    PCL_TRIGSTAT_32,
    PCL_TRIG0DIFF_32,
    PCL_TRIG0TTL_32,							
    PCL_TRIG0OPTO_32,
    PCL_TRIG1DIFF_32,
    PCL_TRIG1TTL_32,
    PCL_TRIG1OPTO_32,
    PCL_CAMLEN_32,
    PCL_CAMFEN_32,
    PCL_CAMMULTI_32,

    PCL_SWTRIG0_32,
    PCL_SWTRIG1_32,

	// TRIGDIV
	PCL_TRIGDIV_32,
	PCL_TRIGCNT_32,
	PCL_TRGDIV_32,
	PCL_DIVCON_32,

	// INTCON0
    PCL_INTCON0_32,
    PCL_VBIEN_32,
    PCL_HBIEN_32,
    PCL_TRIG0IEN_32,
    PCL_TRIG1IEN_32,
    PCL_SOAQIEN_32,
    PCL_EOAQIEN_32,
    PCL_PIOIEN_32,

	// INTSTAT0
    PCL_INTSTAT0_32,
    PCL_VBINT_32,
    PCL_HBINT_32,
    PCL_TRIG0INT_32,
    PCL_TRIG1INT_32,
    PCL_SOAQINT_32,
    PCL_EOAQINT_32,
    PCL_PIOINT_32,

	// PORTCON
    PCL_PORTCON_32,
    PCL_OUTSTB_32,
    PCL_INREGENB_32,
    PCL_INSTBPOL_32,
    PCL_INREGCLR_32,
    PCL_IPINTPOL_32,
    PCL_IPINTSTAT_32,
    PCL_IPSTRBSTA_32,

    PCL_OUTPORT_32,
    PCL_INPORT_32,

	// FFCCON group
	PCL_FFCCON_32,
	PCL_FFCENB_32,
	PCL_FFCACC_32,
	PCL_FFC12_32,
	PCL_FFCMODE_32,
	PCL_UNDER_A,
	PCL_OVER_A,
	PCL_UNDER_B,
	PCL_OVER_B,
	PCL_UNDER_C,
	PCL_OVER_C,
	PCL_UNDER_D,
	PCL_OVER_D,

	// RLECON group
	PCL_RLECON_32,
	PCL_RLEENB_32,
	PCL_RLEIBUF_32,
	PCL_RLEBM_32,
	PCL_RLEWRAP_32,
	PCL_RLEMODE_32,
	PCL_RLEENBA_32,
	PCL_RLEENBB_32,
	PCL_RLEENBC_32,
	PCL_RLEENBD_32,


	PCL_RLESTADR_32,
	PCL_RLEPRADR_32,
	PCL_RLEBMADR_32,

	PCL_INTCON2_32,
	PCL_RLEIEN_32,
	PCL_INTSTAT2_32,
	PCL_RLEINT_32,

	PCL_RLELADR_32,
	PCL_RLEINTADR_32,

	// BMCON group
    PCL_BMCON_32,
    PCL_BMENB_32,
    PCL_BMSTEP_32,
    PCL_PAD_32,
    PCL_CLIP_32,
    PCL_OCTSWAP_32,
    PCL_OCTACC_32,
    PCL_DMAACC_32,

    PCL_SFORM_32,

	PCL_SDINIT_32,
    PCL_AQSTART_32,
    PCL_AQADR_32,
    PCL_INTADR_32,
	PCL_SEGSIZE_32,
	PCL_OCTSTART_32,
	PCL_SWCOUNT_32,

    PCL_INTCON1_32,
	PCL_ADRIEN_32,
	PCL_BMIEN_32,
	PCL_SWCTIEN_32,

    PCL_INTSTAT1_32,
	PCL_ADRINT_32,
	PCL_BMINT_32,
	PCL_SWCTINT_32,

	PCL_SEGSTART_32,
	PCL_OCTADR_32,

	PCL_U1RX_32,
	PCL_U1IE_32,
	PCL_U1IIFC_32,
	PCL_U1LC_32,
	PCL_U1MC_32,
	PCL_U1DTR_32,
	PCL_U1RTS_32,
	PCL_U1LS_32,
	PCL_U1MS_32,
	PCL_U1CTS_32,
	PCL_U1SC_32,
	
	PCL_U2RX_32,
	PCL_U2IE_32,
	PCL_U2IIFC_32,
	PCL_U2LC_32,
	PCL_U2MC_32,
	PCL_U2DTR_32,
	PCL_U2RTS_32,
	PCL_U2LS_32,
	PCL_U2MS_32,
	PCL_U2CTS_32,
	PCL_U2SC_32,

	PCL_FPGACON_32,
	PCL_FPGAPRG_32,
	PCL_FPGARDY_32,
	PCL_FPGDONE_32,
	PCL_BRDID_32,
	PCL_PRESENT_32,
	PCL_FPGADAT_32,

	PCL_SCATDST0_32,
	PCL_SCATLEN0_32,




    PCL_MAXREGS2       /* keep it last */
};


#endif
