% EEGKERNEL	Gets the EEG forward equation "Kernel Matrix" as defined in Mosher et al. 1997.
%
%   K = EEGKERNEL(R, RQ, [SIGMA], [LAMBDA], [MU]) calculates the kernel vector for the EEG forward equation in
%   either single or Berge's multi-shell approximation.  dot(EEGKERNEL(R, RQ, [LAMBDA], [MU]), Q) is 
%   the potential on sphere at R generated by a dipole at RQ with moment Q.  R, RQ, Q are 3-dimensional
%   vectors.  The optional parameters LAMBDA and MU are "Berge parameters" as given in Mosher et al. 1997.  
%   When these are omitted, a single shell model is assumed.  SIGMA is default to 1 for now (totally 
%   unreasonable, but it should work for now).
%
% See also EEGFORWARD, MOSHERF.
%
function k = EEGKernel(r,rq,sigma,lambda,mu)

if (nargin < 3)
   sigma = 1;
end

if (nargin < 5)
   % single shell -- the expressions are taken from Mosher et al 1997 
   d = r - rq;
   nd = norm(d);
   nd3 = nd*nd*nd;
   nrq2 = norm(rq)*norm(rq);
   nr = norm(r);
   if (nrq2 ~= 0)
    c1 = (1/(4*pi*sigma*nrq2))*(2*dot(d,rq)/nd3 + (1/nd) - (1/nr));
    c2 = (1/(4*pi*sigma*nrq2))*((nd+nr)/(nr*mosherF(r,rq)) + (2/nd3));
    k = (c1 - c2 * dot(r,rq)) * rq + c2 * nrq2 * r;   
   else
    k = r*(1/(4*pi*sigma))*((nd+nr)/(nr*mosherF(r,rq)) + (2/nd3));
   end
else
   % multi shell
   n = length(lambda);
   if (n ~= length(mu))
      n = min(n, length(mu));
      disp('WARNING: invalid lambda and mu parameters');
   end
   
   % add up the various pieces
   k = 0;
   for i=1:n
      k = k + lambda(i)*EEGKernel(r,mu(i)*rq,sigma);
   end
   
end
