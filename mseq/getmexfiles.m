% GETMEXFILES   This function returns info on how to compile mex files
%
%      MEXFILES = GETMEXFILES returns a bunch of mexfiles (MEXFILES).  This
%      function is used by COMPILE.
%
% See also COMPILE.
%
function mexfiles = getmexfiles;

mexfiles = { { 'Fast Walsh-Hadamard transform', 'fastwalsh', 'fastwalsh.cpp' }...
             { 'M-sequence generator', 'genmseq',   'genmseq.cpp' } ...
             { 'Search for valid m-sequences', 'findmseqseed', 'findmseqseed.cpp' }...
             { 'Rotates a vector', 'rotatevector', 'rotatevector.cpp' }...
             { 'Prewalsh permutation for m-transform', 'prewalshperm', 'prewalshperm.cpp' }...
             { 'Postwalsh permutation for m-transform', 'postwalshperm', 'postwalshperm.cpp' }...
             { 'Create bit count parity look up table', 'createbcplut', 'createbcplut.cpp' }...
             { 'Resamples data to a different rate using nearest nb', 'simpleresample', 'simpleresample.cpp' }...
             { 'Detects for peaks in a trace of data (uses LOTS of heuristics)', 'detectpeaks', 'detectpeaks.cpp' }...
             { 'Generates m-sequence using tap-register scheme', 'slowseqp', 'slowseqp.cpp' }...
             { 'No mean fast Walsh-Hadamard transform', 'nmfastwalsh', 'nmfastwalsh.cpp' }...
             { 'No mean pre walsh permutation for m-transform', 'nmprewalshperm', 'nmprewalshperm.cpp' }...
             { 'No mean post walsh permutation for m-transform', 'nmpostwalshperm', 'nmpostwalshperm.cpp' }...
             { 'Finds products of m-seq (use for finding kernel overlap)', 'mexmseqfindprod', 'mexmseqfindprod.cpp' }...
             { 'Direct cross correlation (very slow)', 'xcorrdirect', 'xcorrdirect.cpp' }...
             { 'Direct circular masking (similar to convolution)', 'fastsimresponse', 'fastsimresponse.cpp' }...
             { 'Get location of kernels in an m-sequence', 'getkernellocation', 'getkernellocation.cpp' }...        
     };
if (ispc)
    mexfiles{length(mexfiles)+1} = { 'Dumps info about the performance counter', 'perfdump', 'perfdump.cpp' };
end
